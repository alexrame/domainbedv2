ermtrain = [
    63.9, 54.8, 78.7, 80.4,# 69.4,
    86.8, 80.6, 97.4, 78.7,# 85.9,
    59.9, 46.9, 54.6, 40.1,# 50.4,
    98.1, 64.4, 72.5, 77.7,# 78.1
]

mean = [
    0.6876802637, 0.5873997709, 0.8017571525, 0.8228138627,
    0.9067382812, 0.8374573379, 0.9838323353, 0.8325273607,
    0.5990297406, 0.5051355793, 0.6057934509, 0.3974162842,
    0.9858657244, 0.6257530120, 0.7251675807, 0.7825829384
]
prod = [
    0.6847960445, 0.5885452463, 0.8033340843, 0.8235024099, 0.9082031250, 0.8383105802,
    0.9838323353, 0.8332909137, 0.5967095549, 0.5008216927, 0.6052896725, 0.3940166582,
    0.9858657244, 0.6280120482, 0.7251675807, 0.7843601896
]
# max = [0.6765554182, 0.5867124857, 0.7990538410, 0.8154693597, 0.9145507812, 0.8110068259, 0.9802395210, 0.8427080682, 0.6357308585, 0.5256778965, 0.6100755668, 0.4174740779, 0.9830388693, 0.6336596386, 0.7361365021, 0.7766587678]
# min = [0.6782035435, 0.5830469645, 0.8013066006, 0.8251090200, 0.8964843750, 0.8451365188, 0.9796407186, 0.8274370069, 0.5912254799, 0.4541906327, 0.5921914358, 0.3617202108, 0.9844522968, 0.6257530120, 0.7245581962, 0.7982819905]
# rand = [0.6876802637, 0.5869415808, 0.7995043929, 0.8191416112, 0.8999023438, 0.8310580205, 0.9760479042, 0.8322728430, 0.5616958448, 0.5076006574, 0.6062972292, 0.3800781914, 0.9893992933, 0.6344126506, 0.7248628885, 0.7956161137] -->
max = [
    0.6633704162, 0.5851088202, 0.7848614553, 0.8065182465, 0.9145507812, 0.7969283276,
    0.9742514970, 0.8409264444, 0.6228643746, 0.5271158587, 0.5866498741, 0.3975862655,
    0.9795053004, 0.6340361446, 0.7315661182, 0.7582938389
]
min = [
    0.6435929131, 0.5644902635, 0.7871142149, 0.8154693597, 0.8720703125, 0.8494027304,
    0.9688622754, 0.8093662510, 0.5435562118, 0.3393590797, 0.5153652393, 0.2627910930,
    0.9696113074, 0.6291415663, 0.7239488117, 0.7876184834
]
rand = [
    0.6724351051, 0.5780068729, 0.7916197342, 0.8124856553,
    0.8886718750, 0.8225255973, 0.9730538922, 0.8282005599,
    0.4937776840, 0.5062654067, 0.6027707809, 0.3646098929,
    0.9837455830, 0.6472138554, 0.7242535040, 0.8024289100
]

ermtrain = [0.01 * v for i, v in enumerate(ermtrain)]

import numpy as np
import matplotlib.pyplot as plt
from matplotlib import cm
from codeplot import plot


def plot_slopes_c():
    fig = plt.figure()
    m = range(16)
    l_m = [mean, prod, min, max, rand]
    l_m = [[l_m[i][j] - ermtrain[j] for j in range(16)] for i in range(len(l_m))]
    labels = ["mean", "prod", "min", "max", "rand"]
    colors = cm.rainbow(np.linspace(0.2, 1, len(l_m)))

    orders = sorted(list(range(16)), key=lambda x: ermtrain[x])
    orders = range(16)
    for i in range(len(l_m)):
        values = [l_m[i][j] for j in orders]
        s = 500 if i == 0 else 100
        plt.scatter(m, values, label=labels[i], color=colors[i], marker="x" if i % 2 else ".", s=s)

        #plot.fit_and_plot_with_value(m, erm[key], order="2", label=None, color=colors[0], ax=None)

    plt.axhline(y=0)
    plt.xlabel("Datasets", fontsize="x-large")
    plt.ylabel("OOD gain over ERM", fontsize="x-large")
    plt.legend(fontsize="x-large")
    return fig


plot.plt.rcParams["figure.figsize"] = (6, 4)
fig_testood = plot_slopes_c()
